Checks: 'clang-diagnostic-*,
         clang-analyzer-*,
         performance-*,
         bugprone-*,
         -bugprone-branch-clone,
         -bugprone-easily-swappable-parameters,
         -bugprone-macro-parentheses,
         -bugprone-signed-char-misuse,
         -bugprone-narrowing-conversions,
         -bugprone-reserved-identifier,
         -bugprone-implicit-widening-of-multiplication-result,
         -bugprone-assignment-in-if-condition,
         -bugprone-parent-virtual-call,
         -bugprone-integer-division,
         -bugprone-inc-dec-in-conditions,
         -clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,
         -performance-no-int-to-ptr,
         -performance-enum-size,
         -modernize-use-nodiscard,
         -performance-avoid-endl'
# clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling - too many unnecessary warning in vendored code
# performance-no-int-to-ptr - consider how to fix this
# bugprone-macro-parentheses - consider fixing
WarningsAsErrors: '*'
HeaderFilterRegex: '.*(?<!\.pb\.h)$'
FormatStyle:     none
CheckOptions:
    - { key: performance-unnecessary-value-param.AllowedTypes, value: 'span;IdType;ReplicationStatsCollector;KeyValueType' }
    - { key: performance-move-const-arg.CheckTriviallyCopyableMove, value: 0 }
    - {
        key: bugprone-unused-return-value.CheckedFunctions, 
        value: '^::std::async$;^::std::launder$;^::std::remove$;^::std::remove_if$;^::std::unique$;^::std::unique_ptr::release$;^::std::basic_string::empty$;^::std::vector::empty$;^::std::back_inserter$;^::std::distance$;^::std::find$;^::std::find_if$;^::std::inserter$;^::std::lower_bound$;^::std::make_pair$;^::std::map::count$;^::std::map::find$;^::std::map::lower_bound$;^::std::multimap::equal_range$;^::std::multimap::upper_bound$;^::std::set::count$;^::std::set::find$;^::std::setfill$;^::std::setprecision$;^::std::setw$;^::std::upper_bound$;^::std::vector::at$;^::bsearch$;^::ferror$;^::feof$;^::isalnum$;^::isalpha$;^::isblank$;^::iscntrl$;^::isdigit$;^::isgraph$;^::islower$;^::isprint$;^::ispunct$;^::isspace$;^::isupper$;^::iswalnum$;^::iswprint$;^::iswspace$;^::isxdigit$;^::memchr$;^::memcmp$;^::strcmp$;^::strcoll$;^::strncmp$;^::strpbrk$;^::strrchr$;^::strspn$;^::strstr$;^::wcscmp$;^::access$;^::bind$;^::connect$;^::difftime$;^::dlsym$;^::fnmatch$;^::getaddrinfo$;^::getopt$;^::htonl$;^::htons$;^::iconv_open$;^::inet_addr$;isascii$;isatty$;^::mmap$;^::newlocale$;^::openat$;^::pathconf$;^::pthread_equal$;^::pthread_getspecific$;^::pthread_mutex_trylock$;^::readdir$;^::readlink$;^::recvmsg$;^::regexec$;^::scandir$;^::semget$;^::setjmp$;^::shm_open$;^::shmget$;^::sigismember$;^::strcasecmp$;^::strsignal$;^::ttyname$;^reindexer::([^Qh]|h[^_]|h_[^v]|h_v[^e]|h_ve[^c]|h_vec[^t]|h_vect[^o]|h_vecto[^r]|h_vector[^:<]|Q[^u]|Qu[^e]|Que[^r]|Quer[^y]|Query[^:]).*([^A]ddIndex|[^d]dIndex|[^d]Index|[^I]ndex|[^n]dex|[^d]ex|[^:]emplace_back|[^e]mplace_back|[^m]place_back|[^p]lace_back|[^l]ace_back|[^a]ce_back|[^c]e_back|[^e]_back|[^_]back|[^b]ack|[^a]ck|[^c]k|[^<]<|[^<kx])$;^reindexer_server::.*;^reindexer_tool::.*'
      }



on: push
jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: ["Visual Studio 16 2019", "MinGW Makefiles"]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build Reindexer
        run: |
          mkdir build && cd build
          cmake -G "${{matrix.compiler}}" ..
          cmake --build . --config Release
          cmake --build . --config Release --target face
          cmake --build . --config Release --target swagger
        shell: bash

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Prepare Environment
        run: |
          ./.github/workflows/install_gtest.sh
          ./.github/workflows/install_gbench.sh
          ./dependencies.sh
          brew install protobuf
          ./.github/workflows/install_grpc.sh
        shell: bash
      - name: Build Reindexer
        run: |
          export CPLUS_INCLUDE_PATH=$GITHUB_WORKSPACE/grpc/third_party/abseil-cpp
          mkdir build && cd build
          cmake -DENABLE_GRPC=ON ..
          make -j4
          STRIP=/bin/true cpack
        shell: bash
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-latest
          path: |
            dependencies.sh
            build/reindexer*.tar.gz
          if-no-files-found: error
      - name: CXX Tests
        run: |
          cd build
          ctest --verbose
        shell: bash

  build-ubuntu20:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Prepare Environment
        run: |
          ./.github/workflows/install_gtest.sh
          ./.github/workflows/install_gbench.sh
          sudo ./dependencies.sh
          sudo apt-get install libprotobuf-dev
          ./.github/workflows/install_grpc.sh
        shell: bash
      - name: Build Reindexer
        run: |
          export CPLUS_INCLUDE_PATH=$GITHUB_WORKSPACE/grpc/third_party/abseil-cpp
          mkdir build && cd build
          cmake -DENABLE_GRPC=ON ..
          make -j4
          STRIP=/bin/true cpack
        shell: bash
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu20.04
          path: |
            dependencies.sh
            build/reindexer*.deb
          if-no-files-found: error
      - name: CXX Tests
        run: |
          cd build
          ctest --verbose
        shell: bash

  build-ubuntu18:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Prepare Environment
        run: |
          ./.github/workflows/install_gtest.sh
          ./.github/workflows/install_gbench.sh
          sudo ./dependencies.sh
          sudo apt-get install libprotobuf-dev
          ./.github/workflows/install_grpc.sh
        shell: bash
      - name: Build Reindexer
        run: |
          export CPLUS_INCLUDE_PATH=$GITHUB_WORKSPACE/grpc/third_party/abseil-cpp
          mkdir build && cd build
          cmake -DENABLE_GRPC=ON ..
          make -j4
          STRIP=/bin/true cpack
        shell: bash
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu18.04
          path: |
            dependencies.sh
            build/reindexer*.deb
          if-no-files-found: error
      - name: CXX Tests
        run: |
          cd build
          ctest --verbose
        shell: bash

  build-sanitizers:
    strategy:
      matrix:
        sanitizer: [TSAN, ASAN]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Prepare Environment
        run: |
          ./.github/workflows/install_gtest.sh
          ./.github/workflows/install_gbench.sh
          sudo ./dependencies.sh
          sudo apt-get install libprotobuf-dev
          ./.github/workflows/install_grpc.sh
        shell: bash
      - name: Build Reindexer
        run: |
          export CPLUS_INCLUDE_PATH=$GITHUB_WORKSPACE/grpc/third_party/abseil-cpp
          mkdir build && cd build
          cmake -DWITH_${{matrix.sanitizer}}=On -DENABLE_GRPC=ON ..
          make -j4
          STRIP=/bin/true cpack
        shell: bash
      - name: CXX Tests
        run: |
          cd build
          ctest --verbose
        shell: bash

  test-pyreindexer-1:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-latest]
      fail-fast: false
    runs-on: ${{matrix.os}}
    needs: [build-ubuntu18, build-ubuntu20, build-macos]
    steps:
      - name: Download ${{matrix.os}} Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{matrix.os}}
      - name: Prepare Environment
        run: |
          chmod a+x dependencies.sh
          sudo ./dependencies.sh
          python3 -m pip install setuptools
        shell: bash
      - name: Install Reindexer
        if: startsWith(${{matrix.os}}, ubuntu)
        run: |
          cd build
          sudo dpkg -i reindexer-dev*.deb
          sudo apt-get install -f
          sudo dpkg -i reindexer-server*.deb
          sudo apt-get install -f
        shell: bash
      - name: Install Reindexer
        if: startsWith(${{matrix.os}}, macos)
        run: |
          cd build
          for f in reindexer-*.tar.gz; do tar -xvzf "$f"; done
          cp -R ./usr/local/include/reindexer /usr/local/include/reindexer
          cp -R ./usr/local/lib/reindexer /usr/local/lib/reindexer
          cp ./usr/local/lib/libreindexer.a /usr/local/lib/libreindexer.a
          cp ./usr/local/lib/libreindexer_server_library.a /usr/local/lib/libreindexer_server_library.a
          cp ./usr/local/lib/libreindexer_server_resources.a /usr/local/lib/libreindexer_server_resources.a
          cp ./usr/local/lib/pkgconfig/libreindexer.pc /usr/local/lib/pkgconfig/libreindexer.pc
          cp ./usr/local/lib/pkgconfig/libreindexer_server.pc /usr/local/lib/pkgconfig/libreindexer_server.pc
          cp ./usr/local/bin/reindexer_server /usr/local/bin/reindexer_server
          cp ./usr/local/etc/reindexer.conf.pkg /usr/local/etc/reindexer.conf.pkg
        shell: bash
      - name: Clone PyReindexer
        run: git clone https://github.com/restream/reindexer-py.git
        shell: bash
      - name: Install PyReindexer
        run: |
          cd reindexer-py
          python3 setup.py build
          sudo python3 setup.py install
        shell: bash
      - name: Test PyReindexer
        run: |
          cd reindexer-py/pyreindexer
          ../.github/workflows/test.sh
        shell: bash

  test-pyreindexer-2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test PyReindexer
        env:
          PYRX_GH_TOKEN: ${{ secrets.PYRX_GH_TOKEN }}
        run: .github/workflows/pyreindexer_workflow.sh
        shell: bash
